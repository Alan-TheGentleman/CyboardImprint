#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&to 2       &kp F1  &kp F2    &kp F3     &kp F4          &kp F5                            &kp F6         &kp F7             &kp F8           &kp F9    &kp F10   &kp F11
&kp EQUAL   &kp N1  &kp N2    &kp N3     &kp N4          &kp N5                            &kp N6         &kp N7             &kp N8           &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W     &kp E      &kp R           &kp T                             &kp Y          &kp U              &kp I            &kp O     &kp P     &kp BSLH
&kp ESCAPE  &kp A   &kp S     &kp D      &kp F           &kp G                             &kp H          &kp J              &kp K            &kp L     &kp SEMI  &kp SQT
&kp GRAVE   &kp Z   &kp X     &kp C      &kp V           &kp B                             &kp N          &kp M              &kp COMMA        &kp DOT   &kp FSLH  &kp RSHFT
                    &kp LEFT  &kp RIGHT                                                                                      &kp UP           &kp DOWN
                                         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp DELETE      &kp LEFT_GUI   &kp RIGHT_CONTROL  &kp RIGHT_SHIFT
                                         &kp SPACE       &mo 1             &kp LEFT_ALT    &kp RIGHT_ALT  &kp ENTER          &kp BACKSPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans          &trans       &trans    &trans        &trans            &kp C_PLAY_PAUSE  &kp C_PREVIOUS        &kp C_NEXT             &kp C_VOLUME_UP   &kp C_VOLUME_DOWN     &trans
&trans  &trans          &trans       &trans    &trans        &trans            &trans            &trans                &trans                 &trans            &trans                &trans
&trans  &trans          &kp GRAVE    &trans    &kp DOLLAR    &trans            &kp CARET         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &kp SQT               &trans
&trans  &kp LEFT_SHIFT  &kp AT_SIGN  &kp HASH  &kp PERCENT   &trans            &kp AMPERSAND     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL         &kp NON_US_BACKSLASH  &trans
&trans  &trans          &trans       &trans    &kp QUESTION  &trans            &kp ASTERISK      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION   &trans                &trans
                        &trans       &trans                                                                            &kp LESS_THAN          &kp GREATER_THAN
                                               &trans        &trans  &trans    &mkp LCLK         &mkp MCLK             &mkp RCLK
                                               &trans        &trans  &trans    &trans            &trans                &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&to 0           &bt BT_CLR       &trans           &trans           &trans           &bt BT_CLR_ALL                    &trans          &trans           &trans           &trans           &trans           &trans
&studio_unlock  &trans           &trans           &trans           &trans           &to 5                             &trans          &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&bootloader     &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                   &studio_unlock  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&sys_reset      &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                   &trans          &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4           &trans           &trans           &trans           &trans           &rgb_ug RGB_EFR                   &trans          &trans           &trans           &trans           &trans           &to 4
                                 &trans           &trans                                                                                               &trans           &trans
                                                                   &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans          &trans           &trans
                                                                   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_DISC 0    &trans          &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
                &trans  &trans                                                  &trans     &trans
                                &trans  &trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK
                                &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
                &kp N2  &kp N3                                            &kp N7  &kp N8
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };

        Gaming {
            bindings = <
&trans     &trans            &trans  &trans  &trans      &to 0                            &trans  &trans  &trans  &trans  &trans  &trans
&kp MINUS  &kp RS(GRAVE)     &kp B   &kp N   &kp M       &kp SQT                          &trans  &trans  &trans  &trans  &trans  &trans
&kp T      &kp TAB           &kp Q   &kp W   &kp E       &kp R                            &trans  &trans  &trans  &trans  &trans  &trans
&kp G      &kp LEFT_SHIFT    &kp A   &kp S   &kp D       &kp F                            &trans  &trans  &trans  &trans  &trans  &trans
&kp V      &kp LEFT_CONTROL  &kp Z   &kp X   &kp C       &kp V                            &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans                                                               &trans  &trans
                                             &kp ESCAPE  &kp ENTER     &kp PAUSE_BREAK    &trans  &trans  &trans
                                             &kp SPACE   &kp LEFT_ALT  &kp LEFT_GUI       &trans  &trans  &trans
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;

    // activate layer 3 within 500ms of the trackball moving
    // <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};

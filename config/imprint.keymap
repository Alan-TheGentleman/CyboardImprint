#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "tap-preferred";
            retro-tap;
            quick-tap-ms = <200>;
        };

        htl: htl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
        };

        html: html {
            compatible = "zmk,behavior-hold-tap";
            label = "HTML";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <200>;
            retro-tap;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp F1           &kp F2           &kp F3        &kp F4                  &kp F5                &kp F6         &kp F7              &kp F8             &kp F9            &kp F10                   &kp F11
&kp EQUAL   &kp N1           &kp N2           &kp N3        &kp N4                  &kp N5                &kp N6         &kp N7              &kp N8             &kp N9            &kp N0                    &kp MINUS
&kp TAB     &kp Q            &kp W            &kp E         &kp R                   &kp T                 &kp Y          &kp U               &kp I              &kp O             &kp P                     &kp BSLH
&kp ESCAPE  &htl LEFT_GUI A  &htl LEFT_ALT S  &htl LCTRL D  &hold_tap LEFT_SHIFT F  &kp G                 &kp H          &hold_tap RSHIFT J  &htl RCTRL K       &htl RIGHT_ALT L  &htl RIGHT_GUI SEMICOLON  &kp SQT
&kp GRAVE   &kp Z            &kp X            &kp C         &kp V                   &kp B                 &kp N          &kp M               &kp COMMA          &kp DOT           &kp FSLH                  &kp PAGE_DOWN
&none       &none            &kp LEFT         &kp RIGHT     &none                                                        &none               &kp UP_ARROW       &kp DOWN          &none                     &none
                                                            &kp ESC                 &kp TAB    &key_repeat    &kp LG(LS(N5))   &kp LC(PLUS)           &kp LC(MINUS)
                                                            &html 3 SPACE           &mo 1      &mo 2      &kp RIGHT_ALT  &kp ENTER           &html 5 BACKSPACE
            >;
        };

        Symbols {
            bindings = <
&none       &none             &none        &none     &none         &none           &none      &none                 &none                  &none             &none             &none
&none       &none             &none        &none     &none         &none           &none      &none                 &none                  &none             &none             &none
&to 3       &none             &kp GRAVE    &none     &kp DOLLAR    &none           &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &none             &none
&none       &kp LEFT_SHIFT    &kp AT_SIGN  &kp HASH  &kp PERCENT   &none           &kp AMPS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL         &kp SINGLE_QUOTE  &none
&kp C_PREV  &none             &none        &none     &kp QUESTION  &none           &kp ASTRK  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION   &kp BACKSLASH     &none
&kp C_NEXT  &kp C_PLAY_PAUSE  &none        &none     &none                                    &none                 &kp LESS_THAN          &kp GREATER_THAN  &kp C_VOLUME_UP   &kp C_VOLUME_DOWN
                                                     &none         &none  &none    &mkp MB1   &mkp MB3              &mkp MB2
                                                     &none         &none  &none    &none      &trans                &trans
            >;
        };

        Numbers {
            bindings = <
&none  &none       &none      &none   &none   &none            &none  &none         &none         &none         &none   &none
&none  &none       &none      &none   &none   &none            &none  &none         &none         &none         &none   &none
&none  &none       &none      &kp F7  &kp F8  &kp F9           &none  &kp N7        &kp N8        &kp N9        &none   &none
&none  &kp LSHIFT  &kp LALT   &kp F4  &kp F5  &kp F6           &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0  &none
&none  &kp LGUI    &kp LCTRL  &kp F1  &kp F2  &kp F3           &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none   &none
&none  &none       &none      &none   &none                           &none         &none         &kp N0        &none   &none
                                      &none   &none   &none    &none  &none         &none
                                      &none   &none   &none    &none  &none         &none
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&none        &none            &none            &none            &none                           &none                     &none  &none  &none  &none  &none  &none
&none        &none            &none            &none            &none                           &none                     &none  &none  &none  &none  &none  &none
&to 0        &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                    &bt BT_SEL 4              &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI                 &rgb_ug RGB_EFF           &none  &none  &none  &none  &none  &none
&sys_reset   &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD                 &rgb_ug RGB_EFR           &none  &none  &none  &none  &none  &none
&to 0        &none            &none            &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(2,90,17)                                   &none  &none  &none  &none  &none
                                                                &none                           &none            &none    &none  &none  &none
                                                                &none                           &none            &none    &none  &none  &none
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };

        Nav {
            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans            &trans          &trans          &trans         &trans           &trans        &trans
&trans  &trans    &trans        &trans     &trans          &trans            &trans          &trans          &trans         &trans           &trans        &trans
&trans  &trans    &trans        &trans     &trans          &trans            &trans          &trans          &trans         &trans           &trans        &trans
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans            &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp CAPSLOCK  &trans
&trans  &trans    &trans        &trans     &trans          &trans            &kp INS         &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP      &kp END       &trans
&trans  &trans    &trans        &trans     &trans                                            &trans          &trans         &trans           &trans        &trans
                                           &trans          &trans  &trans    &trans          &trans          &trans
                                           &trans          &trans  &trans    &trans          &kp ENTER       &kp BACKSPACE
            >;
        };
    };
};

//right hand trackball configuration
// &trackball_peripheral_listener {
//  input-processors =
// this gets it to the default installation orientation,,,,,,,,,,,,,,,,,
//<&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;
// activate layer 3 within 500ms of the trackball moving
// <&zip_temp_layer 3 500>;
//};
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        // <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        // multiply sensitivity by 1, divide by 25 (make it slower for scrolling),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_scaler 1 25>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>,
        <&zip_scroll_transform INPUT_TRANSFORM_X_INVERT>;
};
